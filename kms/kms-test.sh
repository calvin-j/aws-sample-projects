#!/bin/bash

if [ -z "$1" ] || [ -z "$2" ]; then
  >&2 echo "This script requires 2 positional parameters:"
  >&2 echo -e "\t1. ARN of key administrator"
  >&2 echo -e "\t2. ARN of key user"
  >&2 echo "Usage:"
  >&2 echo -e "\t$0 arn:aws:iam::000000000007:user/lukaszbudnik arn:aws:iam::000000000007:user/lukaszbudnik-test"
  exit 1
fi

region="eu-central-1"
stack_name="lukasz-test-key-2"
admin_arn=$1
user_arn=$2

aws cloudformation create-stack --stack-name $stack_name \
  --region $region \
  --capabilities CAPABILITY_IAM \
  --template-body file://kms.template.yml \
  --parameters \
    ParameterKey=AdminArn,ParameterValue=$admin_arn \
    ParameterKey=UserArn,ParameterValue=$user_arn

echo "Waiting for AWS CloudFormation to create the stack."
sleep 10

aws cloudformation wait stack-create-complete --region $region \
  --stack-name $stack_name

# race conditions, make sure describe-stacks will return correct response
sleep 10

output=$(aws cloudformation describe-stacks --region $region \
  --stack-name $stack_name)

# get key arn (there is only 1 output in stack)
key_arn=$(echo $output | jq -r '.Stacks[0].Outputs[0].OutputValue')

echo "Key created: $key_arn"

# generate data key

data_key_response=$(aws kms generate-data-key --key-id $key_arn --key-spec AES_256 --region $region)

echo "Data key generated:"
echo "$data_key_response"

data_key=$(echo $data_key_response | jq -r '.Plaintext')
encrypted_data_key=$(echo $data_key_response | jq -r '.CiphertextBlob')

echo "This file will be encrypted with a data key generated by KMS using key $key_arn" > plain.txt

echo "Original file:"
cat plain.txt

# data key is encoded in base64, convert it to raw bytes and pass to openssl stdin
base64 -D <<< $data_key | openssl enc -aes-256-ecb -pass stdin -in plain.txt -out encrypted.bin

# encryption done
# remove all traces of the raw data key - all was done in memory - key not persisted anywhere
unset data_key_response
unset data_key

# decryption

# decrypt encrypted data key with KMS

base64 -D <<< $encrypted_data_key > encrypted_data_key
data_key_response=$(aws kms decrypt --region $region --ciphertext-blob fileb://encrypted_data_key)

echo "Decrypted data key:"
echo "$data_key_response"

data_key=$(echo $data_key_response | jq -r '.Plaintext')

# using the data_key decrypt the file
base64 -D <<< $data_key | openssl enc -d -aes-256-ecb -pass stdin -in encrypted.bin -out plain_decrypted.txt

# verify that everything is fine
echo "Decrypted file:"
cat plain_decrypted.txt

# clean up

echo "Cleaning up local files and the stack"
rm plain*
rm encrypted*

aws cloudformation delete-stack --stack-name $stack_name --region $region
