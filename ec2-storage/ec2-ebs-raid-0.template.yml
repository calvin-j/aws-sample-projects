Parameters:
  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: The EC2 Instance Type for the instance
    Type: String
  ExternalIP:
    Description: The external IP which will be allowed to SSH to the instance
    Type: String

Mappings:
  # to use other regions/virtualization types update the mapping
  RegionToArchToAmiMap:
    eu-central-1:
        "hvm": "ami-8da700e2"

Resources:

  RaidVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: false

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RaidVPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RaidVPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RaidVPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Remote SSH access
      VpcId: !Ref RaidVPC
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Join ['', [!Ref ExternalIP, '/32']]

  Instance:
      Type: AWS::EC2::Instance
      Properties:
        ImageId: !FindInMap [ RegionToArchToAmiMap, !Ref 'AWS::Region' , 'hvm' ]
        KeyName: !Ref KeyPairName
        InstanceType: !Ref InstanceType
        EbsOptimized: true
        Tags:
          -
            Key: "Name"
            Value: "Raid10"
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeviceIndex: 0
            GroupSet:
              - !Ref SecurityGroup
            SubnetId: !Ref PublicSubnet
        UserData:
          "Fn::Base64":
            !Sub |
              #!/bin/bash -xe
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Instance --region ${AWS::Region}
        # HVM virtualization does not support trailing repeated digits b1, b2, b3
        # thus below example is using sdb, sdc, and sdd
        BlockDeviceMappings:
          -
           DeviceName: /dev/sdb
           Ebs:
             VolumeSize: 10
          -
           DeviceName: /dev/sdc
           Ebs:
             VolumeSize: 10
          -
           DeviceName: /dev/sdd
           Ebs:
             VolumeSize: 10
      Metadata:
        AWS::CloudFormation::Init:
          config:
            commands:
              setup_raid:
                command:
                  !Sub |
                  mdadm --create --verbose /dev/md0 --name=exchequer --level=0 --raid-devices=3 /dev/sdb /dev/sdc /dev/sdd
                  mkfs.ext4 -L exchequer /dev/md0
                  mkdir -p /mnt/exchequer
                  mount LABEL=exchequer /mnt/exchequer
                  echo 'LABEL=exchequer /mnt/exchequer ext4 defaults,nofail,discard 0 0' >> /etc/fstab

Outputs:
  PublicIp:
    Description: The instance public IP
    Value: !GetAtt Instance.PublicIp
  InstanceID:
    Description: The instance ID
    Value: !Ref Instance
